{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","length","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","hsvToHsl","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alpha","values","a","split","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","concat","toHSLA","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","template","components","strings","useAsButton","inline","appClass","theme","lockOpacity","lo","hidden","palette","preview","hue","opacity","keys","interaction","input","save","cancel","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","this","swatchselect","change","init","disabled","comparison","closeOnScroll","outputPrecision","autoReposition","swatches","sliders","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","includes","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","variant","isVertical","rb","eb","so","scrollTop","scrollLeft","getScrollOffset","positions","vertical","variants","apply","bevs","vars","styleprop","adder","win","ch","rot","v2Ok","v1Ok","Nanopop","_root","button","app","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","cs","sh","opposite","picker","_color","_recalc","_updateOutput","cssRGBaString","background","currentColor","remove","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","silent","event","args","_eventListener","_parseLocalColor","alphaMakesAChange","callBacks","indexOf","splice","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","destroyAndRemove","recalc","string","utype","startsWith","click","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of Array.from(element.children)) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n\n    // Since invalid color's will be parsed as black, filter them out\n    if (name.toLowerCase() === 'black') {\n        return '#000000';\n    }\n\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle === '#000000' ? null : ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100;\n    m /= 100;\n    y /= 100;\n    k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSVA(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    invalid: for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\n        const alpha = !!match[2];\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break invalid;\n\n                return {values: cmykToHsv(c, m, y, k), type};\n            }\n            case 'rgba': {\n                let [, , , r, g, b, a] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\n            }\n            case 'hexa': {\n                let [, hex] = match;\n\n                if (hex.length === 4 || hex.length === 3) {\n                    hex = hex.split('').map(v => v + v).join('');\n                }\n\n                const raw = hex.substring(0, 6);\n                let a = hex.substring(6);\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                a = a ? (parseInt(a, 16) / 255) : undefined;\n\n                return {values: [...hexToHsv(raw), a], a, type};\n            }\n            case 'hsla': {\n                let [, , , h, s, l, a] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...hslToHsv(h, s, l), a], a, type};\n            }\n            case 'hsva': {\n                let [, , , h, s, v, a] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [h, s, v, a], a, type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const mapper = (original, next) => (precision = -1) => {\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\n    };\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v, that.a];\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            // Check if alpha channel make sense, convert it to 255 number space, convert\n            // to hex and pad it with zeros if needet.\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\n                .toString(16)\n                .toUpperCase().padStart(2, '0');\n\n            alpha && hex.push(alpha);\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\n            return hex;\n        },\n\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options: {lock}, cache} = that;\r\n            const {element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            const cx = clamp(x / wrapper.offsetWidth);\r\n            const cy = clamp(y / wrapper.offsetHeight);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\r\n\r\n            if (that.options.lock === 'h') {\r\n                y = x;\r\n            }\r\n\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\n\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n      <div data-key=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''}>\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\n            </div>\n\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n            </div>\n\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \n\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\n\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\n\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\n            <input data-key=\"cancel\" class=\"pcr-clear\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)}>\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\n          </div>\n        </div>\n      </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n","// Import utils\nimport * as _        from './utils/utils';\nimport {parseToHSVA} from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n            outputPrecision: 0,\n            lockOpacity: false,\n            autoReposition: true,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, theme, sliders, lockOpacity} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        this._nanopop = Nanopop({\n            reference: this._root.button,\n            el: this._root.app\n        });\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const [so, sh] = (() => {\n            const {sliders} = inst.options;\n            let so = 'v', sh = 'v';\n\n            if (sliders && sliders.match(/^[vh]+$/g)) {\n                if (sliders.length > 1) {\n                    [so, sh] = sliders;\n                } else {\n                    so = sh = sliders;\n                }\n            }\n\n            const opposite = {v: 'h', h: 'v'};\n            return [opposite[so], opposite[sh]];\n        })();\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!cs.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        _color.s = x * 100;\n\n                        // Calculate the value\n                        _color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        _color.v < 0 ? _color.v = 0 : 0;\n                        inst._updateOutput();\n                    }\n\n                    // Set picker and gradient color\n                    let cssRGBaString = _color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) return;\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        inst._color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) return;\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        inst._color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                } else {\n                    return o;\n                }\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            this._nanopop.update(options.position);\n        }\n    }\n\n    _updateOutput() {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA().toString(0)}\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {element} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(element);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '1.2.1';\nexport default Pickr;\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, padding = 8}) {\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\n\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\n        if (cached) return cached;\n        const [position, variant = 'middle'] = pos.split('-');\n        const isVertical = (position === 'top' || position === 'bottom');\n\n        return cache[pos] = {\n            position,\n            variant,\n            isVertical\n        };\n    })();\n\n    const getScrollOffset = el => {\n        let top = 0, left = 0;\n\n        while (el = el.parentElement) {\n            top += el.scrollTop;\n            left += el.scrollLeft;\n        }\n\n        return {top, left};\n    };\n\n    return {\n        update(pos) {\n            const {position, variant, isVertical} = getInfo(pos);\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n            const so = getScrollOffset(el);\n\n            const positions = vertical => vertical ? {\n                t: rb.top - eb.height - padding + so.top,\n                b: rb.bottom + padding + so.top\n            } : {\n                r: rb.right + padding + so.left,\n                l: rb.left - eb.width - padding + so.left\n            };\n\n            const variants = vertical => vertical ? {\n                s: rb.left + rb.width - eb.width + so.left,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2) + so.left,\n                e: rb.left + so.left\n            } : {\n                s: rb.bottom - eb.height + so.top,\n                m: rb.bottom - rb.height / 2 - eb.height / 2 + so.top,\n                e: rb.bottom - rb.height + so.top\n            };\n\n            function apply(bevs, vars, styleprop) {\n                const vertical = styleprop === 'top';\n                const adder = vertical ? eb.height : eb.width;\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'] + (vertical ? so.top : so.left);\n\n                for (const ch of bevs) {\n                    const v = vars[ch];\n\n                    if ((v - (vertical ? so.top : so.left)) > 0 && (v + adder) < win) {\n                        el.style[styleprop] = `${v}px`;\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            for (const rot of [isVertical, !isVertical]) {\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\n                if (v2Ok && v1Ok) {\n                    return;\n                }\n            }\n        }\n    };\n}\n"],"sourceRoot":""}